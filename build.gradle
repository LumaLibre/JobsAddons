plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.20-Beta2'
}

group = 'me.jsinco'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "enginehub"
        url = "https://maven.enginehub.org/repo/"
    }
    maven {
        name = "jitpack"
        url = 'https://jitpack.io'
    }
    maven {
        name = "playerpoints"
        url = 'https://repo.rosewooddev.io/repository/public/'
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20-R0.1-SNAPSHOT"
    compileOnly "com.sk89q.worldguard:worldguard-bukkit:7.0.9-beta1"
    compileOnly "com.github.Zrips:jobs:4.17.2"
    compileOnly "org.black_ixx:playerpoints:3.2.5"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
kotlin {
    jvmToolchain(17)
}
